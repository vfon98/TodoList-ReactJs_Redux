{"version":3,"sources":["actions/index.js","constants/ActionTypes.js","components/AddTaskForm.js","components/SearchAndSort.js","components/OneTask.js","components/TaskTable.js","App.js","serviceWorker.js","reducers/tasks.js","reducers/formMethod.js","reducers/updateTask.js","reducers/filter.js","reducers/sort.js","reducers/index.js","index.js"],"names":["addTask","task","type","changeTask","updateTask","newTask","deleteTask","toggleForm","method","changeStatus","filterTask","filter","searchTask","keyword","sortTask","sort","AddTaskForm","handleSubmit","e","preventDefault","refs","txtName","value","props","formMethod","name","status","isActive","dispatch","needUpdateTask","id","alert","this","className","onSubmit","ref","placeholder","React","Component","connect","state","SearchAndSort","handleSearch","txtKeyWord","handleClick","sortBy","order","by","onChange","data-toggle","onClick","href","OneTask","handleUpdateTask","handleDeleteTask","handleChangeStatus","index","TaskTable","handleChange","txtTaskName","selTaskStatus","tasksList","isMatchName","toLowerCase","indexOf","a","b","map","key","tasks","App","Boolean","window","location","hostname","match","initialState","localStorage","getItem","JSON","parse","reducer","action","length","console","log","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","subscribe","setItem","stringify","getState","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a28bbbd2.chunk.js","sourcesContent":["import * as types from '../constants/ActionTypes';\n\nexport const addTask = task => ({\n\ttype: types.ADD_TASK,\n\ttask\n});\nexport const changeTask = task => ({\n\ttype: types.CHANGE_UPDATE_TASK,\n\ttask\n});\nexport const updateTask = (task, newTask ) => ({\n\ttype: types.UPDATE_TASK,\n\ttask,\n\tnewTask\n});\nexport const deleteTask = task => ({\n\ttype: types.DELETE_TASK,\n\ttask\n});\nexport const toggleForm = method => ({\n\ttype: types.TOGGLE_FORM,\n\tmethod\n});\nexport const changeStatus = task => ({\n\ttype: types.CHANGE_STATUS,\n\ttask\n});\nexport const filterTask = filter => ({\n\ttype: types.FILTER_TASK,\n\tfilter\n});\nexport const searchTask = keyword => ({\n\ttype: types.SEARCH_TASK,\n\tkeyword\n});\nexport const sortTask = sort => ({\n\ttype: types.SORT_TASK,\n\tsort\n});","export const ADD_TASK = \"ADD_TASK\";\nexport const UPDATE_TASK = \"UPDATE_TASK\";\nexport const CHANGE_UPDATE_TASK = \"CHANGE_UPDATE_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const TOGGLE_FORM = \"TOGGLE_FORM\";\nexport const CHANGE_STATUS = \"CHANGE_STATUS\";\nexport const FILTER_TASK = \"FILTER_TASK\";\nexport const SEARCH_TASK = \"SEARCH_TASK\";\nexport const SORT_TASK = \"SORT_TASK\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTask, updateTask, toggleForm } from '../actions';\n\nclass AddTaskForm extends React.Component {\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\t\tif (this.refs.txtName.value !== \"\") {\n\t\t\tif (this.props.formMethod === \"add\") {\n\t\t\t\tlet task = {};\n\t\t\t\ttask.name = this.refs.txtName.value;\n\t\t\t\ttask.status = this.refs.isActive.value === \"true\";\n\t\t\t\tthis.props.dispatch(addTask(task));\n\t\t\t\tthis.refs.txtName.value = \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet newTask = {};\n\t\t\t\tlet task = this.props.needUpdateTask;\n\t\t\t\tnewTask.id = task.id;\n\t\t\t\tnewTask.name = this.refs.txtName.value;\n\t\t\t\tnewTask.status = this.refs.isActive.value === \"true\";\n\t\t\t\tthis.props.dispatch(updateTask(task, newTask));\n\t\t\t\t// this.props.dispatch(changeTask(newTask));\n\t\t\t\tthis.props.dispatch(toggleForm(\"add\"));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\talert(\"Please enter the task's name !\");\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tlet needUpdateTask = this.props.needUpdateTask;\n\t\tif (this.props.formMethod === \"update\") {\n\t\t\tthis.refs.txtName.value = needUpdateTask.name;\n\t\t\tthis.refs.isActive.value = needUpdateTask.status;\n\t\t}\n\t\telse {\n\t\t\tthis.refs.txtName.value = \"\";\n\t\t\tthis.refs.isActive.value = true;\n\t\t}\n\t}\n\n\trender() {\n\t\tlet method = this.props.formMethod;\n\t\treturn (\n\t\t\t<div className={ method === \"add\" ? \"panel panel-success\" : \"panel panel-warning\" }>\n\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t<h3 className=\"panel-title\">\n\t\t\t\t\t\t{ method === \"add\" ? \"Add Task\" : \"Update Task\" }\n\t\t\t\t\t</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"panel-body\">\n\t\t\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label>Task Name:</label>\n\t\t\t\t\t\t\t<input ref=\"txtName\" type=\"text\" className=\"form-control\" placeholder=\"Input field\"/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<label>Status:</label>\n\t\t\t\t\t\t\t<select ref=\"isActive\" id=\"input\" className=\"form-control\">\n\t\t\t\t\t\t\t\t<option value=\"true\">Active</option>\n\t\t\t\t\t\t\t\t<option value=\"false\">Canceled</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-warning\"><i className=\"far fa-save\"></i> Save</button> &nbsp;\n\t\t\t\t\t\t\t<button type=\"reset\" className=\"btn btn-danger\"><i className=\"fas fa-ban\"></i> Cancel</button>\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tformMethod: state.formMethod,\n\tneedUpdateTask: state.updateTask\n});\n\nexport default connect(mapStateToProps)(AddTaskForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { searchTask, sortTask } from '../actions';\n\nclass SearchAndSort extends React.Component {\n\n\thandleSearch = (e) => {\n\t\te.preventDefault();\n\t\tvar keyword = this.refs.txtKeyWord.value;\n\t\tthis.props.dispatch(searchTask(keyword));\n\t}\n\n\thandleClick = (sortBy, order) => {\n\t\tlet sort = {by: sortBy, order: order};\n\t\tthis.props.dispatch(sortTask(sort));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"row mt-15\">\n\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t<form>\n\t\t\t\t\t  <div className=\"input-group\">\n\t\t\t\t\t    <input \n\t\t\t\t\t\t    ref=\"txtKeyWord\"\n\t\t\t\t\t\t    type=\"text\" className=\"form-control\" \n\t\t\t\t\t\t    placeholder=\"Search\"\n\t\t\t\t\t\t    onChange={this.handleSearch}\n\t\t\t\t\t    />\n\t\t\t\t\t    <div className=\"input-group-btn\">\n\t\t\t\t\t      <button className=\"btn btn-primary\" type=\"submit\">\n\t\t\t\t\t        <i className=\"glyphicon glyphicon-search\"></i>\n\t\t\t\t\t      </button>\n\t\t\t\t\t    </div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t<div className=\"dropdown\">\n\t\t\t\t\t  <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">Sort &nbsp;\n\t\t\t\t\t  <span className=\"fas fa-sort\"></span></button>\n\t\t\t\t\t  <ul className=\"dropdown-menu\">\n\t\t\t\t\t  \t<li className=\"dropdown-header\">By name</li>\n\t\t\t\t\t    <li onClick={ () => this.handleClick('name', 1) }><a href=\"#!\"><i className=\"fas fa-sort-alpha-down fa-fw\"></i> Ascending</a></li>\n\t\t\t\t\t    <li onClick={ () => this.handleClick('name', -1) }><a href=\"#!\"><i className=\"fas fa-sort-alpha-up fa-fw\"></i> Descending</a></li>\n\n\t\t\t\t\t    <li className=\"divider\"></li>\n\t\t\t\t\t  \t<li className=\"dropdown-header\">By status</li>\n\t\t\t\t\t    <li onClick={ () => this.handleClick('status', 1) }><a href=\"#!\"><i className=\"fas fa-check fa-fw\"></i> Active</a></li>\n\t\t\t\t\t    <li onClick={ () => this.handleClick('status', -1) }><a href=\"#!\"><i className=\"fas fa-times fa-fw\"></i> Disabled</a></li>\n\t\t\t\t\t  </ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(SearchAndSort);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleForm, changeTask, deleteTask, changeStatus } from '../actions';\n\nclass OneTask extends React.Component {\n\thandleUpdateTask = () => {\n\t\tvar { task } = this.props;\n\t\tthis.props.dispatch(toggleForm(\"update\"));\n\t\tthis.props.dispatch(changeTask(task));\n\t}\n\n\thandleDeleteTask = () => {\n\t\tvar { task } = this.props;\n\t\tthis.props.dispatch(deleteTask(task));\n\t}\n\n\thandleChangeStatus = () => {\n\t\tvar { task } = this.props;\n\t\tthis.props.dispatch(changeStatus(task));\n\t}\n\n\trender() {\n\t\tlet { task } = this.props;\n\t\treturn (\n\t\t\t<tr>\n\t\t\t\t<td>{ this.props.index + 1 }</td>\n\t\t\t\t<td>{ task.name }</td>\n\t\t\t\t<td>\n\t\t\t\t\t<span className={ task.status ? \"label label-success\" : \"label label-danger\" }\n\t\t\t\t\t\tonClick={this.handleChangeStatus}\n\t\t\t\t\t>{ task.status ? \"Active\" : \"Disabled\" }</span>\n\t\t\t\t</td>\n\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t<button \n\t\t\t\t\t\ttype=\"button\" className=\"btn btn-warning\"\n\t\t\t\t\t\tonClick={this.handleUpdateTask}\n\t\t\t\t\t><i className=\"far fa-edit\"></i> Update</button> &nbsp;\n\n\t\t\t\t\t<button \n\t\t\t\t\t\ttype=\"button\" className=\"btn btn-danger\"\n\t\t\t\t\t\tonClick={this.handleDeleteTask}\n\t\t\t\t\t><i className=\"far fa-trash-alt\"></i> Delete</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t}\n}\n\nexport default connect()(OneTask);","import React from 'react';\nimport OneTask from './OneTask';\nimport { connect } from 'react-redux';\nimport { filterTask } from '../actions';\n\nclass TaskTable extends React.Component {\n\thandleChange = () => {\n\t\tvar filter = {};\n\t\tfilter.name = this.refs.txtTaskName.value;\n\t\tfilter.status = this.refs.selTaskStatus.value;\n\t\tthis.props.dispatch(filterTask(filter));\n\t}\n\n\trender() {\n\t\tvar { tasksList, filter, sort } = this.props;\n\t\t// ===== FILTERING =====\n\t\ttasksList = tasksList.filter(task => {\n\t\t\tlet isMatchName = task.name.toLowerCase().indexOf(filter.name.toLowerCase()) >= 0;\n\t\t\tif (filter.status !== \"all\") {\n\t\t\t\treturn task.status === (filter.status === \"active\")\n\t\t\t\t\t&& isMatchName;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn isMatchName;\n\t\t\t}\n\t\t});\n\t\t// ====== SORTING =====\n\t\tif (sort.name !== \"\") {\n\t\t\t// Sort by Name\n\t\t\tif (sort.by === \"name\") {\n\t\t\t    tasksList = tasksList.sort((a, b) => {\n\t\t\t        if (a.name.toLowerCase() > b.name.toLowerCase()) return sort.order;\n\t\t\t        else return -sort.order;\n\t\t\t    });\n\t\t\t}\n\t\t\t// Sort by Status\n\t\t\telse {\n\t\t\t    tasksList = tasksList.sort((a, b) => {\n\t\t\t        if (a.status > b.status) return -sort.order;\n\t\t\t        else return sort.order;\n\t\t\t    });\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"row mt-15\">\n\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t<table className=\"table table-striped table-hover table-bordered\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>No</th>\n\t\t\t\t\t\t\t\t<th>Task Name</th>\n\t\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t\t<th>Option</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\tref=\"txtTaskName\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\" className=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Task name search ...\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<select \n\t\t\t\t\t\t\t\t\t\tref=\"selTaskStatus\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=\"all\">All</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"active\">Active</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"disabled\">Disabled</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttasksList.map((task, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<OneTask \n\t\t\t\t\t\t\t\t\t\tkey={index} task={task} index={index}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\ttasksList: state.tasks,\n\t\tfilter: state.filter,\n\t\tsort: state.sort\n\t}\n}\n\nexport default connect(mapStateToProps)(TaskTable);","import React, { Component } from 'react';\nimport AddTaskForm from './components/AddTaskForm';\nimport SearchAndSort from './components/SearchAndSort';\nimport TaskTable from './components/TaskTable';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { toggleForm } from './actions';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"page-header text-center\">To Do List</h1>\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <AddTaskForm />\n          </div>\n          <div className=\"col-md-8\">\n            <button type=\"button\" className=\"btn btn-primary\"\n                onClick={() => this.props.dispatch(toggleForm(\"add\")) } >Add Task &nbsp;<i className=\"fas fa-plus-circle\"></i></button>\n            <SearchAndSort />\n            <TaskTable />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../constants/ActionTypes';\n\nvar initialState = [\n        {id: 0, name: \"Programming\", status: true},\n        {id: 1, name: \"Playing game\", status: false}\n      ];\nif (localStorage.getItem('taskList') !== null && localStorage.getItem('taskList') !== '[]') {\n\tinitialState = JSON.parse(localStorage.getItem('taskList'));\n}\n\nvar reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.ADD_TASK:\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{\n\t\t\t\t\tid: state[state.length - 1].id + 1,\n\t\t\t\t\tname: action.task.name,\n\t\t\t\t\tstatus: action.task.status\n\t\t\t\t}\n\t\t\t];\n\n\t\tcase types.UPDATE_TASK:\n\t\t\treturn state.map(task => task.id === action.task.id ? {id: task.id, ...action.newTask} : task);\n\n\t\tcase types.DELETE_TASK:\n\t\t\treturn state.filter(task => task !== action.task);\n\n\t\tcase types.CHANGE_STATUS:\n\t\t\treturn state.map(task => task === action.task ? {...task, status: !task.status} : task);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;","import * as types from '../constants/ActionTypes';\n\nvar initialState = \"add\";\n\nvar reducer = (state = initialState, action) => {\n\tif (action.type === types.TOGGLE_FORM) {\n\t\treturn action.method;\n\t}\n\treturn state;\n};\n\nexport default reducer;","import * as types from '../constants/ActionTypes';\n\nvar initialState = {\n\tneedUpdateTask: {}\n};\n\nvar reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.CHANGE_UPDATE_TASK:\n\t\t\treturn action.task;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;","import * as types from '../constants/ActionTypes';\n\nvar initialState = {\n\tname: \"\",\n\tstatus: \"all\"\n}\n\nvar reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.FILTER_TASK:\n\t\t\treturn action.filter;\n\t\tcase types.SEARCH_TASK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tname: action.keyword\n\t\t\t};\n\t\tdefault: return state;\n\t}\n}\n\nexport default reducer;","import * as types from '../constants/ActionTypes';\n\nvar initialState = {\n\tname: \"\",\n\tstatus: 0\n};\n\nvar reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.SORT_TASK:\n\t\t\tconsole.log(action.sort);\n\t\t\treturn action.sort;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport tasks from './tasks';\nimport formMethod from './formMethod';\nimport updateTask from './updateTask';\nimport filter from './filter';\nimport sort from './sort';\n\nvar rootReducer = combineReducers({\n\ttasks,\n\tformMethod,\n\tupdateTask,\n\tfilter,\n\tsort\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'));\n\nstore.subscribe(() => {\n\tlocalStorage.setItem('taskList',\n\t\tJSON.stringify(store.getState().tasks)\n\t);\n\t// console.log(\"Local Storage Updated !\");\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}